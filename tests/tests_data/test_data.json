{
      "scins":
            {
            "CCCC(Nc(cc1)cc2c1oc(-c(cc1)cc(Br)c1OC)n2)=O": "1_1_3_2_0-1_1_0_0-1_0_0_0",
            "CCOc(cc1)ccc1C(Nc1c(C(N)=O)oc2c1cccc2)=O": "1_1_3_2_0-1_1_0_0-3_0_0_0",
            "Cc1ccnc(SCC(Nc(sc2c3CCCC2)c3C#N)=O)n1": "1_1_3_2_0-1_1_0_0-4_0_0_0",
            "Oc(ccc(C1NCc(cccc2)c2-n2c1ccc2)c1)c1Cl": "1_1_4_2_0-1_0_1_0-1_0_0_0",
            "CC(Oc1ccc(C(c(cc2)ccc2OC(C)=O)c2ncccc2)cc1)=O": "1_3_3_3_0-3_0_0_0-1_1_1_0",
            "NC(N1c(cccc2)c2C=Cc2c1cccc2)=O": "0_0_3_1_0-0_0_1_0-0_0_0_0",
            "COc(cc1)ccc1Oc1nc(Oc(cc2)ccc2OC)nc(Oc(cc2)ccc2OC)n1": "3_3_4_4_0-4_0_0_0-2_2_2_0",
            "O=S(C1(CC(C2)C3)CC3CC2C1)NCc1ccccc1": "1_1_5_2_4-1_0_1_0-3_0_0_0",
            "CC(C)(CC(C)(c1c2ccc(OC)c1)N1c3ccccc3)N2C1=O": "1_1_5_2_2-1_0_1_0-1_0_0_0",
            "O=C(C1(CCCCC1)NC(Nc1ccccc1)=O)NCc(cc1)cc2c1OCO2": "1_1_4_3_0-2_1_0_0-7_0_0_0",
            "CC(C(NCCCn1cncc1)=O)Oc(ccc(Cl)c1)c1Cl": "1_1_2_2_0-2_0_0_0-7_0_0_0",
            "C(Cn1nnnc1C(c1cccs1)N1CCOCC1)c1ccccc1": "2_4_4_4_0-4_0_0_0-1_1_1_3",
            "COCCCn1c(SCC(OC2CCCCC2)=O)nnc1-c1cccs1": "2_2_3_3_0-3_0_0_0-1_4_0_0",
            "Cc(cccc1)c1NC(CCC(Nc(c(OC)c1)cc(OC)c1NC(c1ccco1)=O)=O)=O": "2_2_3_3_0-3_0_0_0-3_7_0_0",
            "N=C(C(C1(CC2)CCN2C(OCc2ccccc2)=O)C#N)OC(CCC2)=C1C2=O": "1_1_4_2_0-1_0_1_0-3_0_0_0",
            "CCOc1ccc(CN(Cc2ccco2)C(c2cccs2)c2nnnn2C(C)(C)C)cc1": "1_5_4_4_0-4_0_0_0-1_1_1_2",
            "CC(C)(C(NCCCn1cncc1)=O)Oc(cc1)ccc1Cl": "1_1_2_2_0-2_0_0_0-7_0_0_0",
            "O=C(C(c1cccs1)N(Cc1ccco1)C(c1csnn1)=O)NC1CCCC1": "1_5_4_4_0-4_0_0_0-1_1_2_2",
            "C(CC(CC1)C2C1CCCC2)C(CCC1CCCCC1)C(C(CC1CCCCC1)C1(CC2CCCC2)CCCCC1)C1CCCC1": "1_7_7_6_0-5_1_0_0-1_1_1_2"
            },
      "num_ring_assemblies": {
            "Cc1cc(C)nc(SCC(=O)Nc2ncc(Cc3ccccc3)s2)n1": 3,
            "Oc1c2c(O)cccc2ccc1": 1,
            "CCC1C(CC2)CC(C(c3ccnc4ccccc34)O)N2C1": 2
      },
      "chain_assemblies_lengths": {
            "Cc1cc(C)nc(SCC(=O)Nc2ncc(Cc3ccccc3)s2)n1": [5, 2],
            "CCOC1=CC=C(C2=CC=CC(NS(=O)(=O)C3=CC=CC([N+](=O)[O-])=C3)=C2)N=N1": [3, 1],
            "O=C(C1=CC=CC(C2=NOC(C(F)(F)F)=N2)=C1)N1CCN(C2=NSC3=CC=CC=C23)CC1": [2, 1, 1]
      },
      "num_chain_assemblies": {
            "CN1C(SCC(=O)NC2CCCC2)=NN=C1C1=CC=CC=N1": 2,
            "Cc1cc(C)nc(SCC(=O)Nc2ncc(Cc3ccccc3)s2)n1": 2,
            "COC(=O)C1=CC=CC=C1NC(=S)NC(=O)C1=CC=CC2=CC=CC=C12": 1
      }
}